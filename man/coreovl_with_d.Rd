% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/PRIMEloci_utility.R
\name{coreovl_with_d}
\alias{coreovl_with_d}
\title{Collapse core regions from a BED file with score-based filtering}
\usage{
coreovl_with_d(
  bed_file,
  score_threshold = 0.75,
  score_diff = 0.1,
  core_width = 151,
  return_gr = TRUE,
  output_dir = NULL,
  num_cores = NULL,
  processing_method = "multisession"
)
}
\arguments{
\item{bed_file}{Path to the input BED file.}

\item{score_threshold}{Numeric threshold for filtering regions
by score from 0-1. Default is 0.75.}

\item{score_diff}{Maximum allowed score difference
between overlapping regions for merging. Default is 0.1.}

\item{core_width}{Width to which each region should be resized (centered).
Default is 151.}

\item{return_gr}{Logical. If TRUE,
returns the final collapsed GRanges object. Default is TRUE.}

\item{output_dir}{Optional directory path to write BED output.
If NULL, no output is written.}

\item{num_cores}{Number of CPU cores to use.
If NULL, will use half of available cores (up to 25). Default is NULL.}
}
\value{
If `return_gr = TRUE`, returns a `GRanges` object
containing the collapsed regions. Otherwise, returns `NULL`.
}
\description{
This function reads a BED file, filters regions by score,
resizes them to a fixed core width, and merges overlapping cores selectively
based on score differences. It supports chromosome-wise parallel processing
and optional output to a BED file with logging throughout.
}
\details{
The function performs the following steps:
\enumerate{
  \item Loads and filters BED entries by score.
  \item Resizes regions to a fixed core width centered on each region.
  \item Merges overlapping cores selectively per chromosome
        using a parallel backend.
  \item Logs progress and optionally writes output to BED format.
}

If no regions pass the score filter, the function exits early with a warning.
}
